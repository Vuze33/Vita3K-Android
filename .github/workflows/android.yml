name: Android build

# this is greatly inspired by skyline ci build file
on: [push]

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      JVM_OPTS: -Xmx6G
      VCPKG_ROOT: /usr/local/share/vcpkg

    steps:
<<<<<<< HEAD
      - uses: actions/checkout@v4
=======
      - uses: actions/checkout@v3
>>>>>>> v12_merge
        with:
          fetch-depth: 0
          submodules: recursive
 
      - uses: hendrikmuhs/ccache-action@v1.2

      - name: Restore Gradle Cache
<<<<<<< HEAD
        uses: actions/cache@v4
=======
        uses: actions/cache@v3
>>>>>>> v12_merge
        with:
          path: |
            ~/.gradle/
            ${{ env.VCPKG_ROOT }}/installed
            ${{ env.VCPKG_ROOT }}/packages
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/build.gradle') }}-${{ hashFiles('android/**/*.xml') }}-${{ hashFiles('android/**.java') }}
          restore-keys: |
            ${{ runner.os }}-gradle-${{ hashFiles('**/build.gradle') }}-${{ hashFiles('android/**/*.xml') }}-
            ${{ runner.os }}-gradle-${{ hashFiles('**/build.gradle') }}-
            ${{ runner.os }}-gradle-

      - name: Set up build environment
        run: |
          sudo apt-get install -y ninja-build
          vcpkg install boost-system:arm64-android boost-filesystem:arm64-android boost-program-options:arm64-android boost-icl:arm64-android boost-variant:arm64-android openssl:arm64-android zlib:arm64-android

      - name: Decode Keystore
        env:
          KEYSTORE_ENCODED: ${{ secrets.KEYSTORE }}
        run: echo $KEYSTORE_ENCODED | base64 --decode > "/home/runner/keystore.jks"

<<<<<<< HEAD
      - name: Setup Android SDK
        uses: android-actions/setup-android@v2
  
=======
>>>>>>> v12_merge
      - name: Gradle build
        env:
          SIGNING_STORE_PATH: "/home/runner/keystore.jks"
          SIGNING_STORE_PASSWORD: ${{ secrets.SIGNING_STORE_PASSWORD }}
          SIGNING_KEY_ALIAS: ${{ secrets.SIGNING_KEY_ALIAS }}
          SIGNING_KEY_PASSWORD: ${{ secrets.SIGNING_KEY_PASSWORD }}
        run: |
          cp -r data android/assets
          cp -r lang android/assets
          cp -r vita3k/shaders-builtin android/assets
          export JAVA_HOME=$(echo $JAVA_HOME_17_X64)
<<<<<<< HEAD
          ./gradlew --info --stacktrace --configuration-cache --build-cache --parallel --configure-on-demand assembleRelease  assembleDebug
          
      - if : failure()
        uses: actions/upload-artifact@v4
        with:
          name: vita3k-${{ env.git_short_sha }}-build-report.zip
          path: /home/runner/work/Vita3K-Android/Vita3K-Android/build/reports/*
        
=======
          ./gradlew --stacktrace --configuration-cache --build-cache --parallel --configure-on-demand assembleRelease

>>>>>>> v12_merge
      - name: Compute git short sha
        shell: bash
        run: echo "git_short_sha=$(git rev-parse --short HEAD)" >> $GITHUB_ENV

<<<<<<< HEAD
      - name: List all files in output folder
        run: |
          ls -l android/build/outputs/apk/
          echo "-----------------------------"
          ls -l android/build/outputs/apk/*/*
          
      - uses: actions/upload-artifact@v4
        with:
          name: vita3k-${{ env.git_short_sha }}-release.apk
          path: android/build/outputs/apk/release/android-release.apk

      - uses: actions/upload-artifact@v4
        with:
          name: vita3k-${{ env.git_short_sha }}-debug.apk
          path: android/build/outputs/apk/debug/android-debug.apk
=======
      - uses: actions/upload-artifact@v3
        with:
          name: vita3k-${{ env.git_short_sha }}-release.apk
          path: android/build/outputs/apk/release/android-release.apk
>>>>>>> v12_merge
